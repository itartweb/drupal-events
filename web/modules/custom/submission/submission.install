<?php

use Drupal\paragraphs\Entity\Paragraph;


/**
 * Implements hook_update_N().
 */
//function submission_update_8001(&$sandbox) {
//  $query = \Drupal::database()->select('webform_submission', 'ws');
//  $query->fields('ws', array('sid'));
//  $query->condition('ws.webform_id', array('training_subscription', 'training_subscription_without_lu'), 'IN');
//  $sids = $query->execute()->fetchAll();
//  foreach ($sids as $item) {
//    $webform_submission = \Drupal::entityTypeManager()->getStorage('webform_submission')->load($item->sid);
//    $submission = \Drupal::service('entity.manager')->getStorage('submission')->create();
//    $submission->set('field_email_after_creation', '1');
//    $submission->set('email', $webform_submission->getElementData('email'));
//    $submission->set('store_department', $webform_submission->getElementData('winkel_afdeling'));
//    $submission->set('store_address', $webform_submission->getElementData('winkel_adres'));
//    $submission->set('training_id', $webform_submission->getElementData('training'));
//    $submission->set('country_id', $webform_submission->getElementData('countrylang'));
//    $submission->set('retailer_id', $webform_submission->getElementData('retailer'));
//    $submission->set('code', $webform_submission->getElementData('unique_code'));
//    $members = createMembers($webform_submission->getElementData('deelnemer'));
//    $submission->set('field_members', $members);
//    $submission->save();
//  }
//}

function createMembers($volume_members = NULL) {
  $members = [];

  if ($volume_members) {
    foreach ($volume_members as $item) {
      if (is_array($item)) {
        $paragraph = Paragraph::create([
          'type' => 'member',
          'field_name' => [
            'value' => $item['voornaam'],
          ],
          'field_lastname' => [
            'value' => $item['achternaam'],
          ],
          'field_email' => [
            'value' => $item['email'],
          ],
          'field_geef_aan_of_we_lunch_moete' => [
            'value' => isset($item['lunch']) ? $item['lunch'] : NULL,
          ],
        ]);
        $paragraph->isNew();
        $paragraph->save();

        $members[] = array(
          'target_id' => $paragraph->id(),
          'target_revision_id' => $paragraph->getRevisionId(),
        );
      }
    }
  }

  return $members;
}
